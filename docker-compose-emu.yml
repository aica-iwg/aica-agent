---
version: "3.8"

services:
  manager:
    environment:
      - MODE=emu
    # For Testing, ensure these containers start with manager
    depends_on:
      siem:
        condition: service_healthy
      attacker:
        condition: service_started
      target:
        condition: service_started
      honeypot:
        condition: service_started
      ids:
        condition: service_started

  attacker:
    build: attacker
    container_name: attacker
    command: /usr/local/bin/docker_entrypoint.sh
    networks:
      - target

  target:
    build: target
    container_name: target
    command: /usr/local/bin/docker_entrypoint.sh
    sysctls:
      - net.ipv4.conf.all.forwarding=1
    cap_add:
      - NET_ADMIN  # For iptables/ipset
      - SYS_ADMIN  # For ClamAV on-access scanning (fanotify)
    networks:
      - target
    healthcheck:
      test: [ "CMD-SHELL", "ls /tmp | grep eicar" ]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - "80:80"
      - "81:81"

  node_red_target:
    build: node_red_target
    container_name: node_red_target
    env_file:
      - node_red_target/.env
    networks:
      - target

  honeypot:
    build: honeypot
    container_name: honeypot
    command: /usr/bin/opencanaryd --dev
    volumes:
      - ./honeypot/opencanary.conf:/etc/opencanaryd/opencanary.conf
    networks:
      - target

  ids:
    build: ./ids
    container_name: ids
    command: sh /usr/local/bin/docker_entrypoint.sh
    cap_add:
      - NET_ADMIN
    network_mode: service:target

  elasticsearch:
    build: elasticsearch
    container_name: elasticsearch
    # Required so that ES generates an acceptable SAN in its HTTPS Cert
    hostname: "elasticsearch"
    env_file:
      - manager/.env
    environment:
      - node.name=elasticsearch
      - cluster.name=aica
      - discovery.type=single-node
      - xpack.security.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - control
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1g
    healthcheck:
      test: ["CMD-SHELL",
              "curl --insecure -u elastic:passwordpassword123 -s -X GET 'http://localhost:9200/_cluster/health?pretty' 
              | grep '\"status\" : \"green\"'"]
      interval: 10s
      timeout: 30s
      retries: 20

  siem:
    build: siem
    container_name: siem
    env_file:
      manager/.env
    depends_on:
      manager_mongodb:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - control
      - target
    ports:
      - "9000:9000"  # Graylog web GUI
    healthcheck:
      test: [ "CMD-SHELL", "wget http://localhost:9000"]
      interval: 10s
      timeout: 10s
      retries: 5

networks:
  target:
