---
version: "3.8"

services:
  manager:
    build: ./aica_django
    container_name: 'manager'
    env_file:
      - 'aica_django/.env'
    tty: true
    ports:
      - "8000:8000"
    depends_on:
      - manager_db
      - manager_mq
      - manager_mongodb
    networks:
      - bridge
      - control
      - target

  visualization:
    build: ./visualization
    container_name: 'visualization'
    env_file:
      - 'aica_django/.env'
    ports:
      - "3000:3000"
    networks:
      - control

  manager_db:
    image: postgres:13-buster
    container_name: 'manager_db'
    env_file:
      - 'aica_django/.env'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - control

  manager_mq:
    image: rabbitmq:3-management
    container_name: 'manager_mq'
    volumes:
      - ./manager_mq/enabled_plugins:/etc/rabbitmq/enabled_plugins
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - control

  manager_mongodb:
    image: mongo:4
    container_name: 'manager_mongodb'
    env_file:
      - 'aica_django/.env'
    volumes:
      - ./mongodb/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
      - ./mongodb/docker_healthcheck.sh:/usr/local/bin/docker_healthcheck.sh
    networks:
      - control
    healthcheck:
      test: ["CMD-SHELL", "docker_healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  bridge:
  control:
  target:
